version: "3.8"
services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
  db:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - .postgres_data:/var/lib/postgresql/data/
  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django
    command: python project/manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - /app:/app/project/media/
    env_file:
      - .env
    depends_on:
      - db
  celery_worker:
    restart: always
    build:
      context: .
    command: celery --workdir project -A config worker -l INFO --pool solo
    volumes:
      - /app:/app/project/media/
    container_name: celery_worker
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - django
  celery_beat:
    restart: always
    build:
      context: .
    command: celery --workdir project -A config beat -l INFO
    volumes:
      - /app:/app/project/media/
    container_name: celery_beat
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - django
      - celery_worker
  telegram:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: telegram
    command: python project/utils/telegramm/telegram_bot.py
    ports:
      - "8001:8001"
    volumes:
      - /app:/app/project/media/
    env_file:
      - .env
    depends_on:
      - django
